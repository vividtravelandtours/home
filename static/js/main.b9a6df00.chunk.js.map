{"version":3,"sources":["app/api/Query/TestimonialQuery.ts","app/api/Mutation/Testimonial.ts","app/api/graphCMS.ts","app/api/Query/BrandInfoQuery.ts","app/api/Query/PostQuery.ts","app/api/Query/PopularQuery.ts","app/api/Query/SocialQuery.ts","app/stores/MainStore.ts","components/home/header/HomeHeader.tsx","app/layout/Loading.tsx","components/home/content/posts/Item.tsx","components/home/content/posts/List.tsx","components/home/content/about/Location.tsx","components/home/content/body.tsx","components/home/popularTours/Item.tsx","components/home/popularTours/List.tsx","components/home/testimaonial/Reviews.tsx","components/home/testimaonial/feedbackForm.tsx","components/home/testimaonial/feedbackModal.tsx","components/home/testimaonial/Carousel.tsx","components/home/testimaonial/section.tsx","components/home/aboutCompany/section.tsx","components/shared/footer/socialMedia/SocialMedia.tsx","components/shared/footer/emailUs/Confirmation.tsx","components/shared/footer/emailUs/EmailNotification.tsx","components/shared/footer/emailUs/Form.tsx","components/shared/footer/Footer.tsx","components/home/Index.tsx","app/layout/App.tsx","serviceWorker.ts","index.tsx"],"names":["testimonialQuery","mutateTesimonial","review","image","name","tourDestination","handle","fileName","height","width","size","mimeType","endpoint","query","graphCMS","GetALL","a","async","request","getTestimonials","createTestimonial","imageURL","fn","toString","split","Axios","post","uniqid","length","fileUpload","headers","data","console","log","url","key","parseInt","type","res","configure","enforceActions","MainStore","getSortedPosts","posts","slice","sort","b","Date","parse","updatedAt","getPopularTours","tours","map","t","observable","has","message","action","isLoading","fetchedData","runInAction","HomeInfo","brandSiteSystems","Posts","postUpdates","PopularTours","topDestinations","Testimonials","testimonials","SocialNetworks","socialSites","Error","event","SubmitByForm","currentTarget","status","Submitting","push","createContext","observer","useContext","Segment","className","Item","Group","Image","src","logo","Header","as","icon","Icon","header","Subheader","subHeader","Button","color","Or","Loading","msg","Dimmer","active","inverted","Loader","Card","style","Content","marginTop","title","Meta","extra","Description","padding","dangerouslySetInnerHTML","__html","content","html","id","AboutLocation","border","HomeContentBody","contextRef","createRef","marginBottom","Container","Ref","innerRef","Grid","Row","Column","maxDeviceWidth","Sticky","context","minDeviceWidth","Tour","tour","bannerImage","wrapped","ui","tourPackage","extraInfo","description","tourPackageOption","gridCol","useMediaQuery","paddingBottom","backgroundColor","margin","Reviews","readMore","href","substring","minHeight","boxShadow","textAlign","circular","picture","newFeedback","setSubmitByForm","useState","date","formBody","setFormBody","handleFieldOnchange","value","placeholder","Divider","horizontal","Form","onSubmit","Testimony","then","success","columns","relaxed","stackable","Input","iconPosition","label","onChange","accept","TextArea","onClick","primary","loading","FeedBackModal","Modal","trigger","edgeEasing","cellSpacing","verticalAlign","vertical","TestimonialSection","letterSpacing","lineHeight","biography","sn","linkAddress","alt","alias","EmailConfirmation","notifyCompany","email","cp","dateNow","formSubmitting","inquired","setInquiry","confirmation","setConfirmation","handleInputOnChange","emails","emailAddress","forEach","e","concat","To","Subject","Msg","response","required","loadData","useEffect","exact","path","component","Home","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9a6df00.chunk.js","sourcesContent":["export const testimonialQuery = `\r\ntestimonials(where: {status: PUBLISHED}) {\r\n    status\r\n    updatedAt\r\n    createdAt\r\n    id\r\n    picture {\r\n      status\r\n      updatedAt\r\n      createdAt\r\n      id\r\n      handle\r\n      fileName\r\n      height\r\n      width\r\n      size\r\n      mimeType\r\n    }\r\n    name\r\n    tourDestination\r\n    review\r\n    date\r\n}`;","import { IImage } from \"../../models/Image\";\r\nimport { INewTestimony } from \"../../models/Testimonial\";\r\n\r\nexport const mutateTesimonial = (review: INewTestimony, image: IImage) => {\r\n  return `\r\n  mutation {\r\n    createTestimonial (data: {\r\n      status: PUBLISHED,\r\n      name: \"${review.name}\",\r\n      tourDestination: \"${review.tourDestination}\",\r\n      review: \"${review.review}\",\r\n      date: \"2018-01-15T00:00:00.000Z\",\r\n      picture: {\r\n        create: {\r\n          status: PUBLISHED,\r\n          handle: \"${image.handle}\",\r\n          fileName: \"${image.fileName}\",\r\n          height: ${image.height},\r\n          width: ${image.width},\r\n          size: ${image.size},\r\n          mimeType: \"${image.mimeType}\"\r\n        }\r\n      }\r\n    }) {\r\n      status\r\n      updatedAt\r\n      createdAt\r\n      id\r\n      picture {\r\n        status\r\n        updatedAt\r\n        createdAt\r\n        id\r\n        handle\r\n        fileName\r\n        height\r\n        width\r\n        size\r\n        mimeType\r\n      }\r\n      name\r\n      tourDestination\r\n      review\r\n      date\r\n    }\r\n  }\r\n  `;\r\n};\r\n\r\n","import { request } from \"graphql-request\";\r\nimport { brandInfoQuery } from \"./Query/BrandInfoQuery\";\r\nimport { IModels } from \"../models/Models\";\r\nimport { postQuery } from \"./Query/PostQuery\";\r\nimport { popularQuery } from \"./Query/PopularQuery\";\r\nimport { testimonialQuery } from \"./Query/TestimonialQuery\";\r\nimport { socialQuery } from \"./Query/SocialQuery\";\r\nimport { mutateTesimonial } from \"./Mutation/Testimonial\";\r\nimport { INewTestimony, ITestimonial } from \"../models/Testimonial\";\r\nimport Axios from \"axios\";\r\nimport uniqid from \"uniqid\";\r\nimport { IImage } from \"../models/Image\";\r\n\r\nconst endpoint =\r\n  \"https://api-apeast.graphcms.com/v1/ck4wi2nmccz8b01bqcjht3b8x/master\";\r\n\r\nconst query = `\r\nquery {\r\n    ${brandInfoQuery},\r\n    ${postQuery},\r\n    ${popularQuery},\r\n    ${testimonialQuery},\r\n    ${socialQuery}\r\n}`;\r\n\r\nconst graphCMS = {\r\n  GetALL: async () => await request<IModels>(endpoint, query),\r\n  getTestimonials: async () =>\r\n    await request<ITestimonial[]>(endpoint, `query {${testimonialQuery}}`),\r\n  createTestimonial: async (review: INewTestimony, imageURL: string) => {\r\n    const fn: string[] = imageURL.toString().split(\"\\\\\");\r\n\r\n    try {\r\n      const { data } = await Axios.post(\r\n        `https://www.filestackapi.com/api/store/S3?key=AqTusWlPTMuGVWthlX3tKz&path=/ee2281c603294f8b9912f6e6b543e5f5-master/${uniqid()}-${\r\n          fn[fn.length - 1]\r\n        }`,\r\n        {\r\n          fileUpload: imageURL\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"image/jpeg\"\r\n          }\r\n        }\r\n      );\r\n\r\n      console.log(\"axios:\", data);\r\n\r\n      const url: string[] = data.url.split(\"/\");\r\n      const key: string[] = data.key.split(\"/\");\r\n\r\n      const image: IImage = {\r\n        handle: url[url.length - 1],\r\n        fileName: key[key.length - 1],\r\n        height: 100,\r\n        width: 100,\r\n        size: parseInt(data.size),\r\n        mimeType: data.type\r\n      };\r\n      const query = await mutateTesimonial(review, image);\r\n      const res = await request<any>(endpoint, query);\r\n      console.log(\"graphCMS:response\", res);\r\n      return res;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default graphCMS;\r\n","export const brandInfoQuery =`\r\nbrandSiteSystems(where: {status: PUBLISHED}) {\r\n    status\r\n    updatedAt\r\n    createdAt\r\n    id\r\n    logo {\r\n      status\r\n      updatedAt\r\n      createdAt\r\n      id\r\n      handle\r\n      fileName\r\n      height\r\n      width\r\n      size\r\n      mimeType\r\n    }\r\n    header\r\n    subHeader\r\n    biography\r\n    emailAddress\r\n}\r\n`;","export const postQuery = `\r\npostUpdates(where: {status: PUBLISHED}) {\r\n    status\r\n    updatedAt\r\n    createdAt\r\n    id\r\n    title\r\n    content {\r\n      raw\r\n      html\r\n    }\r\n}\r\n`;","export const popularQuery = `\r\ntopDestinations(where: {status: PUBLISHED}) {\r\n    status\r\n    updatedAt\r\n    createdAt\r\n    id\r\n    bannerImage {\r\n      status\r\n      updatedAt\r\n      createdAt\r\n      id\r\n      handle\r\n      fileName\r\n      height\r\n      width\r\n      size\r\n      mimeType\r\n    }\r\n    promoText\r\n    tourPackage\r\n    extraInfo\r\n    tourPackageOption\r\n    description\r\n  }`;","export const socialQuery = `\r\nsocialSites(where: {status: PUBLISHED}) {\r\n    status\r\n    updatedAt\r\n    createdAt\r\n    id\r\n    icon {\r\n      status\r\n      updatedAt\r\n      createdAt\r\n      id\r\n      handle\r\n      fileName\r\n      height\r\n      width\r\n      size\r\n      mimeType\r\n    }\r\n    alias\r\n    linkAddress\r\n}`;","import { configure, observable, action, runInAction } from 'mobx';\r\nimport { createContext, SyntheticEvent } from 'react';\r\nimport { IBrandInfo } from '../models/BrandInfo';\r\nimport graphCMS from '../api/graphCMS';\r\nimport { IPost } from '../models/Post';\r\nimport { IPopular } from '../models/Popular';\r\nimport { ITestimonial, INewTestimony } from '../models/Testimonial';\r\nimport { ISocial } from '../models/Social';\r\n\r\nconfigure({ enforceActions: 'always' });\r\n\r\nclass MainStore {\r\n    @observable HomeInfo: IBrandInfo | null = null;\r\n    @observable Posts: IPost[] | null = null;\r\n    @observable PopularTours: IPopular[] | null = null;\r\n    @observable Testimonials: ITestimonial[] | null = null;\r\n    @observable SocialNetworks: ISocial[] | null = null;\r\n    @observable isLoading = false;\r\n    @observable Submitting = false;\r\n    @observable SubmitByForm = '';\r\n    @observable Error = { has: false, message: '' };\r\n\r\n    @action loadData = async () => {\r\n        this.isLoading = true;\r\n\r\n        try {\r\n            const fetchedData = await graphCMS.GetALL();\r\n            runInAction('Loading Data', () => {\r\n                this.HomeInfo = fetchedData.brandSiteSystems[0];\r\n                this.Posts = this.getSortedPosts(fetchedData.postUpdates);\r\n                this.PopularTours = fetchedData.topDestinations;\r\n                this.Testimonials = fetchedData.testimonials;\r\n                this.SocialNetworks = fetchedData.socialSites;\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.Error = { has: true, message: error }\r\n        } finally {\r\n            runInAction(() => this.isLoading = false);\r\n        }\r\n    }\r\n\r\n    @action setSubmitByForm = (event: SyntheticEvent<HTMLButtonElement>) => this.SubmitByForm = event.currentTarget.name;\r\n    @action formSubmitting = (status: boolean) => this.Submitting = status;\r\n\r\n    @action newFeedback = async (review: INewTestimony, imageURL: string) => {\r\n        this.Submitting = true;\r\n        try {\r\n            const res = await graphCMS.createTestimonial(review, imageURL);\r\n            console.log('mainstore', res);\r\n            runInAction(() => this.Submitting = false);\r\n            if(res.createTestimonial.status) {\r\n                runInAction(() => this.Testimonials?.push(res.createTestimonial));\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (error) {\r\n            console.log('mainstore:error', error);\r\n            runInAction(() => {\r\n                this.Error = { has: true, message: error };\r\n                this.Submitting = false;\r\n            });\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getSortedPosts = (posts: IPost[]) => {\r\n        const sorted = posts.slice().sort((a, b) => Date.parse(b.updatedAt) - Date.parse(a.updatedAt));\r\n        return sorted;\r\n    }\r\n\r\n    getPopularTours = (tours: IPopular[]) => {\r\n        tours.map(t => console.log(t));\r\n        return tours;\r\n    }\r\n}\r\n\r\nexport default createContext(new MainStore());","import React, { useContext } from \"react\";\r\nimport { Segment, Item, Header, Icon, Button } from \"semantic-ui-react\";\r\nimport MainStore from \"../../../app/stores/MainStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport './HomeHeader.css';\r\n\r\nconst HomeHeader = () => {\r\n\r\n  const { HomeInfo } = useContext(MainStore);\r\n\r\n  return (\r\n    <Segment className=\"home-header\">\r\n      <Item.Group>\r\n        <Item.Image src={`https://media.graphcms.com/${HomeInfo?.logo.handle}`} />\r\n        <Item>\r\n          <Header as=\"h2\" icon>\r\n            <Icon name=\"plane\" />\r\n            <span>{ HomeInfo?.header }</span>\r\n            <Header.Subheader>\r\n              { HomeInfo?.subHeader }\r\n            </Header.Subheader>\r\n          </Header>\r\n        </Item>\r\n        <Item>\r\n          <Button.Group>\r\n            <Button color=\"blue\">Domestic Tours</Button>\r\n            <Button.Or />\r\n            <Button color=\"green\">International Tours</Button>\r\n          </Button.Group>\r\n        </Item>\r\n      </Item.Group>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(HomeHeader);","import React, { FC } from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nexport const Loading: FC<{ msg: string }> = ({ msg }) => {\r\n  return (\r\n    <Dimmer active inverted>\r\n      <Loader size=\"large\">{ msg }</Loader>\r\n    </Dimmer>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Card, Icon } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { IPost } from \"../../../../app/models/Post\";\r\n\r\nconst PostItem: FC<{ post: IPost }> = ({ post }) => {\r\n  return (\r\n    <Card className=\"anouncement-post\" style={{width: '100%'}}>\r\n      <Card.Content>\r\n        <Card.Header style={{marginTop: '5px'}}>{ post.title }</Card.Header>\r\n        <Card.Meta>\r\n          <Icon name=\"calendar\" />\r\n          <strong>\r\n            Posted: <em>{ new Date(post.updatedAt).toString().split('GMT')[0] }</em>\r\n          </strong>\r\n        </Card.Meta>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Card.Description style={{padding: '15px'}}>\r\n          <span dangerouslySetInnerHTML={{ __html: post.content.html}}></span>\r\n        </Card.Description>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default observer(PostItem);\r\n","import React, { useContext } from \"react\";\r\nimport { Item } from \"semantic-ui-react\";\r\nimport MainStore from \"../../../../app/stores/MainStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport PostItem from \"./Item\";\r\nimport './Posts.css';\r\n\r\nconst PostList = () => {\r\n  \r\n  const { Posts } = useContext(MainStore);\r\n\r\n  return (\r\n    <Item.Group>\r\n      {\r\n          Posts?.map(post => (\r\n            <Item key={post.id}>\r\n                <PostItem post={post} />\r\n            </Item>\r\n          ))\r\n      }\r\n    </Item.Group>\r\n  );\r\n};\r\n\r\nexport default observer(PostList);","import React from \"react\";\r\nimport { Card, Icon } from \"semantic-ui-react\";\r\n\r\nconst AboutLocation = () => {\r\n  return (\r\n    <Card style={{width: '100%'}}>\r\n      <Card.Content header=\"Our Location\" />\r\n      <Card.Content>\r\n        <iframe\r\n          title=\"location\"\r\n          style={{border: 'none'}}\r\n          src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1930.718739429413!2d121.11463217755428!3d14.574129998763635!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3397c79995ecf367%3A0xd05647809f1b2173!2s2nd%20st.%2C%20Cainta%2C%20Rizal!5e0!3m2!1sen!2sph!4v1578755113205!5m2!1sen!2sph\"\r\n          width=\"100%\"\r\n          height=\"300px\"\r\n        ></iframe>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"marker\" />2nd St, 1900 Cainta Rizal\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AboutLocation;","import React, { createRef } from \"react\";\r\nimport {\r\n  Segment,\r\n  Container,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Ref,\r\n  Sticky\r\n} from \"semantic-ui-react\";\r\nimport PostList from \"./posts/List\";\r\nimport AboutLocation from \"./about/Location\";\r\nimport MediaQuery from \"react-responsive\";\r\n\r\nconst HomeContentBody = () => {\r\n  const contextRef = createRef();\r\n\r\n  return (\r\n    <Segment style={{marginBottom: '4em'}}>\r\n      <Container>\r\n        <Ref innerRef={contextRef}>\r\n          <Grid>\r\n            <Grid.Row>\r\n              <Grid.Column width=\"16\">\r\n                <Header style={{ marginTop: \"2em\" }} as=\"h2\">\r\n                  <Icon color=\"red\" name=\"announcement\" />\r\n                  <Header.Content>Anouncement</Header.Content>\r\n                </Header>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <MediaQuery maxDeviceWidth={900}>\r\n                <Grid.Column width=\"16\">\r\n                  <PostList />\r\n                </Grid.Column>\r\n                <Grid.Column width=\"16\">\r\n                  <Sticky context={contextRef}>\r\n                    <AboutLocation />\r\n                  </Sticky>\r\n                </Grid.Column>\r\n              </MediaQuery>\r\n              <MediaQuery minDeviceWidth={901}>\r\n                <Grid.Column width=\"10\">\r\n                  <PostList />\r\n                </Grid.Column>\r\n                <Grid.Column width=\"6\">\r\n                  <Sticky context={contextRef}>\r\n                    <AboutLocation />\r\n                  </Sticky>\r\n                </Grid.Column>\r\n              </MediaQuery>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Ref>\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default HomeContentBody;\r\n","import React, { FC } from \"react\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { IPopular } from \"../../../app/models/Popular\";\r\n\r\nconst Tour: FC<{ tour: IPopular }> = ({ tour }) => {\r\n  return (\r\n    <Card style={{marginBottom: '15px', width: '100%'}}>\r\n      <Image\r\n        src={`https://media.graphcms.com/${tour.bannerImage.handle}`}\r\n        wrapped\r\n        ui={false}\r\n      />\r\n      <Card.Content>\r\n        <Card.Header>{tour.tourPackage}</Card.Header>\r\n        <Card.Meta>\r\n          <span>{tour.extraInfo}</span>\r\n        </Card.Meta>\r\n        <Card.Description>{tour.description}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"marker\" />\r\n        {tour.tourPackageOption}\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Tour;\r\n","import React, { useContext } from \"react\";\r\nimport { Segment, Container, Grid, Header, Icon } from \"semantic-ui-react\";\r\nimport MainStore from \"../../../app/stores/MainStore\";\r\nimport Tour from \"./Item\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst PopularTours = () => {\r\n  const { PopularTours } = useContext(MainStore);\r\n  const isMobile = useMediaQuery({ query: '(max-device-width: 900px)'});\r\n  const gridCol = isMobile ? 16 : 4;\r\n\r\n  return (\r\n    <Segment style={{paddingBottom: '4em', backgroundColor: '#eeeeee'}}>\r\n      <Container>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={16}>\r\n              <Header style={{margin: '2em 0 1em 0'}} as=\"h2\">\r\n                <Icon color='blue' name=\"globe\" />\r\n                <Header.Content>Popular Tours</Header.Content>\r\n              </Header>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {PopularTours?.map(tour => (\r\n              <Grid.Column key={tour.id} width={gridCol}>\r\n                <Tour tour={tour} />\r\n              </Grid.Column>\r\n            ))}\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(PopularTours);\r\n","import React, { FC } from \"react\";\r\nimport { Segment, Header, Image, Item, Icon } from \"semantic-ui-react\";\r\nimport { ITestimonial } from \"../../../app/models/Testimonial\";\r\n\r\nconst Reviews: FC<{ review: ITestimonial }> = ({ review }) => {\r\n  const readMore = review.review.length > 200 ? <a href={`/Review/${review.id}`}>...Read More</a> : \"\";\r\n  const msg = review.review.substring(0, 200);\r\n\r\n  return (\r\n    <Segment style={{ minHeight: \"250px\", border: \"none\", boxShadow: 'none' }}>\r\n      <Header as=\"h2\" icon textAlign=\"center\">\r\n        <Image\r\n          circular\r\n          src={`https://media.graphcms.com/${review.picture.handle}`}\r\n        />\r\n        <Header.Content>{review.name}</Header.Content>\r\n      </Header>\r\n      <Item.Description>\r\n        <p style={{ padding: \"0 45px\", textAlign: \"center\" }}>\r\n          <Icon name=\"quote left\" />\r\n          <em>\r\n            {msg}\r\n            {readMore}\r\n          </em>\r\n          <Icon name=\"quote right\" />\r\n        </p>\r\n      </Item.Description>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import React, { useState, SyntheticEvent, useContext } from \"react\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Segment,\r\n  Grid,\r\n  Divider,\r\n  Icon,\r\n  Header\r\n} from \"semantic-ui-react\";\r\nimport MainStore from \"../../../app/stores/MainStore\";\r\nimport { INewTestimony } from \"../../../app/models/Testimonial\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst FeedbackForm = () => {\r\n  const frmName = \"customerFeedback\";\r\n  const { newFeedback, SubmitByForm, setSubmitByForm, Submitting } = useContext(\r\n    MainStore\r\n  );\r\n  const [formBody, setFormBody] = useState({\r\n    name: \"\",\r\n    tourDestination: \"\",\r\n    review: \"\",\r\n    date: Date().toString(),\r\n    picture: \"\"\r\n  });\r\n\r\n  const handleFieldOnchange = (\r\n    event: SyntheticEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { name, value } = event.currentTarget;\r\n    setFormBody({ ...formBody, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = () => {\r\n    const Testimony: INewTestimony = {\r\n      name: formBody.name,\r\n      tourDestination: formBody.tourDestination,\r\n      review: formBody.review,\r\n      date: Date().toString()\r\n    };\r\n\r\n    newFeedback(Testimony, formBody.picture)\r\n      .then(success => {\r\n        if(success) {\r\n          console.log(`new reviews from ${formBody.name} has been created`);\r\n        } else {\r\n          console.log(`new reviews from ${formBody.name} has been rejected`);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Segment placeholder>\r\n      <Header as=\"h4\" icon>\r\n        <Icon circular name=\"comments\" />\r\n        <Divider horizontal>We value your feedback</Divider>\r\n      </Header>\r\n      <Form onSubmit={handleFormSubmit}>\r\n        <Grid columns={1} relaxed=\"very\" stackable>\r\n          <Grid.Column>\r\n            <Form.Input\r\n              name=\"name\"\r\n              icon=\"user\"\r\n              iconPosition=\"left\"\r\n              label=\"Fullname\"\r\n              placeholder=\"Firstname Lastname\"\r\n              onChange={handleFieldOnchange}\r\n            />\r\n            <Form.Input\r\n              name=\"tourDestination\"\r\n              icon=\"plane\"\r\n              iconPosition=\"left\"\r\n              label=\"Recent Tour\"\r\n              type=\"text\"\r\n              placeholder=\"ex. Singapore\"\r\n              onChange={handleFieldOnchange}\r\n            />\r\n            <Form.Input\r\n              name=\"picture\"\r\n              icon=\"picture\"\r\n              iconPosition=\"left\"\r\n              label=\"Avatar\"\r\n              type=\"file\"\r\n              accept=\".jpg\"\r\n              placeholder=\"Upload your picture here\"\r\n              onChange={handleFieldOnchange}\r\n            />\r\n            <Form.TextArea\r\n              name=\"review\"\r\n              label=\"Feedback\"\r\n              type=\"text\"\r\n              onChange={handleFieldOnchange}\r\n            />\r\n          </Grid.Column>\r\n        </Grid>\r\n\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Divider horizontal>\r\n                <Button\r\n                  name={frmName}\r\n                  onClick={setSubmitByForm}\r\n                  content=\"Submit\"\r\n                  primary\r\n                  loading={frmName === SubmitByForm && Submitting}\r\n                />\r\n              </Divider>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(FeedbackForm);\r\n","import React from \"react\";\r\nimport { Button, Modal } from \"semantic-ui-react\";\r\nimport FeedbackForm from \"./feedbackForm\";\r\n\r\nconst FeedBackModal = () => (\r\n  <Modal\r\n    style={{width: '300px'}}\r\n    trigger={\r\n      <Button color=\"blue\" content=\"Feedback\" icon=\"thumbs up\" size=\"big\" />\r\n    }\r\n  >\r\n    <FeedbackForm />\r\n  </Modal>\r\n);\r\n\r\nexport default FeedBackModal;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Segment,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Item\r\n} from \"semantic-ui-react\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport Carousel from \"nuka-carousel\";\r\nimport MainStore from \"../../../app/stores/MainStore\";\r\nimport Reviews from \"./Reviews\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport FeedBackModal from \"./feedbackModal\";\r\n\r\nconst TestimonialCarousel = () => {\r\n  const { Testimonials } = useContext(MainStore);\r\n\r\n  return (\r\n    <Segment>\r\n      <Grid columns={2} relaxed=\"very\" stackable style={{marginTop: '2em'}}>\r\n        <Grid.Column>\r\n          <Carousel edgeEasing=\"easeOutCirc\" cellSpacing={20}>\r\n            {Testimonials?.map(review => (\r\n              <Reviews key={review.id} review={review} />\r\n            ))}\r\n          </Carousel>\r\n        </Grid.Column>\r\n\r\n        <Grid.Column verticalAlign=\"middle\" style={{ marginBottom: \"2em\" }}>\r\n          <Header as=\"h2\" icon textAlign=\"center\">\r\n            <MediaQuery maxDeviceWidth={767}>\r\n              <Divider horizontal>\r\n                <Icon name=\"comments\" circular />\r\n              </Divider>\r\n            </MediaQuery>\r\n            <MediaQuery minDeviceWidth={768}>\r\n              <Icon name=\"comments\" circular />\r\n            </MediaQuery>\r\n            <Header.Content>Share your experience</Header.Content>\r\n          </Header>\r\n          <Item.Description\r\n            style={{ textAlign: \"center\", marginBottom: \"15px\" }}\r\n          >\r\n            We really appreciate you taking out the time to help us improve our offerings and service!\r\n          </Item.Description>\r\n          <Item style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\r\n            <Icon color=\"grey\" size=\"big\" name=\"star\" />\r\n            <Icon color=\"grey\" size=\"big\" name=\"star\" />\r\n            <Icon color=\"grey\" size=\"big\" name=\"star\" />\r\n            <Icon color=\"grey\" size=\"big\" name=\"star\" />\r\n            <Icon color=\"grey\" size=\"big\" name=\"star\" />\r\n          </Item>\r\n          <FeedBackModal />\r\n        </Grid.Column>\r\n      </Grid>\r\n\r\n      <MediaQuery minDeviceWidth={768}>\r\n        <Divider vertical>\r\n          <Icon color=\"red\" name=\"heart\" />\r\n        </Divider>\r\n      </MediaQuery>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(TestimonialCarousel);\r\n","import React from \"react\";\r\nimport {\r\n  Segment,\r\n  Grid,\r\n  Container,\r\n  Header,\r\n  Icon\r\n} from \"semantic-ui-react\";\r\nimport TestimonialCarousel from \"./Carousel\";\r\n\r\n\r\nconst TestimonialSection = () => {\r\n  return (\r\n    <Segment placeholder style={{paddingBottom: '4em'}}>\r\n      <Container>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={16}>\r\n              <Header style={{margin: '2em 0 1em 0'}} as=\"h2\">\r\n                <Icon color=\"yellow\" name='star' />\r\n                <Header.Content>\r\n                  Testimonials\r\n                  <Header.Subheader>We make sure our customers are genuinely happy</Header.Subheader>\r\n                </Header.Content>\r\n              </Header>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n\r\n          <Grid.Row>\r\n            <Grid.Column width={16}>\r\n              <TestimonialCarousel />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default TestimonialSection;","import React, { useContext } from \"react\";\r\nimport { Segment, Container, Header, Icon, Item } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport MainStore from \"../../../app/stores/MainStore\";\r\n\r\nconst AboutTheCompany = () => {\r\n  const { HomeInfo } = useContext(MainStore);\r\n\r\n  return (\r\n    <Segment style={{ padding: \"3em 1em\", backgroundColor: \"#0d0c0b\" }}>\r\n      <Container>\r\n        <Header as=\"h2\" icon textAlign=\"center\">\r\n          <Icon style={{backgroundColor: 'white'}} color=\"orange\" name=\"users\" circular />\r\n          <Header.Content>\r\n            <strong style={{ color: \"white\" }}>About the Company</strong>\r\n          </Header.Content>\r\n        </Header>\r\n        <Item.Description>\r\n          <p style={{ color: \"white\", letterSpacing: '2px', lineHeight: '1.5', textAlign: 'justify' }}>{HomeInfo?.biography}</p>\r\n        </Item.Description>\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(AboutTheCompany);\r\n","import React, { useContext } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Grid, Header, Icon, Divider } from \"semantic-ui-react\";\r\nimport MainStore from \"../../../../app/stores/MainStore\";\r\nimport MediaQuery from \"react-responsive\";\r\n\r\nconst SocialMedia = () => {\r\n  const { SocialNetworks } = useContext(MainStore);\r\n\r\n  return (\r\n    <Grid.Column verticalAlign=\"middle\">\r\n      <Header as=\"h2\" icon textAlign=\"center\">\r\n        <MediaQuery maxDeviceWidth={767}>\r\n          <Divider horizontal>\r\n          <Icon name=\"user\" circular />\r\n          </Divider>\r\n        </MediaQuery>\r\n        <MediaQuery minDeviceWidth={768}>\r\n        <Icon name=\"user\" circular />\r\n        </MediaQuery>\r\n        \r\n        <Header.Content>Reach us on social media</Header.Content>\r\n      </Header>\r\n      <div className=\"social-network\">\r\n        {SocialNetworks?.map(sn => (\r\n          <a key={sn.id} href={sn.linkAddress}>\r\n            <div>\r\n              <img\r\n                src={`https://media.graphcms.com/${sn.icon.handle}`}\r\n                alt={sn.alias}\r\n              />\r\n            </div>\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default observer(SocialMedia);\r\n","import React, { FC } from \"react\";\r\nimport { Grid, Icon, Header } from \"semantic-ui-react\";\r\n\r\nconst EmailConfirmation: FC<{ msg: any }> = ({ msg }) => (\r\n  <Grid.Column>\r\n    <Header as=\"h2\" icon textAlign=\"center\">\r\n      <Icon name=\"mail\" circular />\r\n    </Header>\r\n    <span dangerouslySetInnerHTML={{ __html: msg }}></span>\r\n  </Grid.Column>\r\n);\r\n\r\nexport default EmailConfirmation;\r\n","export const notifyCompany = (name: string, email: string, cp: string, message: string) => {\r\n    const dateNow = Date().toString();\r\n    return `\r\n        <div>\r\n            <p>\r\n                <strong>\r\n                    <em>\r\n                        ***This is autogenerated email,please don't reply***\r\n                    </em>\r\n                </strong>\r\n            </p>\r\n            <div>Good day,</div>\r\n            <p>\r\n                Someone get intouch with you last <em>${dateNow}</em>.\r\n                Please answer his/her inquiry as soon as possible through details below:\r\n            </p>\r\n\r\n            <h3>Customer Information</h3>\r\n            <table border=1 style=\"width: 500px\">\r\n                <tr>\r\n                    <td>\r\n                        <strong>Name</strong>\r\n                    </td>\r\n                    <td>\r\n                        ${name}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <strong>Email</strong>\r\n                    </td>\r\n                    <td>\r\n                        ${email}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <strong>Mobile Number</strong>\r\n                    </td>\r\n                    <td>\r\n                        ${cp}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan=2>\r\n                        <strong style=\"color;red\">Inquiry:</strong>\r\n                        <p>\r\n                            <em>\r\n                                ${message}\r\n                            </em>\r\n                        </p>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n\r\n            <p>\r\n                <h4>Vivid Travel & Tours</h4>\r\n                <h5>Sent via Website</h5>\r\n            </p>\r\n        </div>\r\n    `;\r\n}","import React, { useState, SyntheticEvent, useContext } from \"react\";\r\nimport { Grid, Header, Icon, Form, Button } from \"semantic-ui-react\";\r\nimport Axios from 'axios';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport MainStore from \"../../../../app/stores/MainStore\";\r\nimport EmailConfirmation from \"./Confirmation\";\r\nimport { notifyCompany } from \"./EmailNotification\";\r\n\r\nconst EmailForm = () => {\r\n  \r\n  const { HomeInfo, formSubmitting, Submitting, setSubmitByForm, SubmitByForm } = useContext(MainStore);\r\n  const [formBody, setFormBody] = useState({ name: '', email: '', cp: 'not provided' , message: ''});\r\n  const [inquired, setInquiry] = useState(false);\r\n  const [confirmation, setConfirmation] = useState('');\r\n  const formName = \"EmailUsForm\";\r\n\r\n  const handleInputOnChange = (event: SyntheticEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = event.currentTarget;\r\n    setFormBody({ ...formBody, [name]: value });\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n      let emails = '';\r\n      HomeInfo?.emailAddress.forEach(e => {\r\n            let delim = emails === '' ? '' : ',';\r\n            emails = emails + delim.concat(e);\r\n      });\r\n\r\n    formSubmitting(true);\r\n    Axios.post('https://em-emailprovider-service-api.herokuapp.com/vivid_travel_and_tours',{\r\n        To: emails,\r\n        Subject: `Inquiry: ${formBody.name}`,\r\n        Msg: `${notifyCompany(formBody.name, formBody.email, formBody.cp, formBody.message)}`\r\n    })\r\n    .then(response => {\r\n        formSubmitting(false);\r\n        const { msg } = response.data;\r\n        \r\n        setInquiry(true);\r\n        setConfirmation(msg);\r\n    });\r\n  }\r\n\r\n  return inquired ? <EmailConfirmation msg={confirmation} /> : (\r\n    <Grid.Column>\r\n      <Header as=\"h2\" icon textAlign=\"center\">\r\n        <Icon name=\"mail\" circular />\r\n        <Header.Content>Message Us</Header.Content>\r\n      </Header>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Input\r\n          name=\"name\"\r\n          icon=\"user\"\r\n          iconPosition=\"left\"\r\n          label=\"Name\"\r\n          placeholder=\"Enter your name\"\r\n          onChange={handleInputOnChange}\r\n          required\r\n        />\r\n        <Form.Input\r\n          name=\"email\"\r\n          icon=\"mail\"\r\n          iconPosition=\"left\"\r\n          label=\"Email Address\"\r\n          placeholder=\"Enter your email address\"\r\n          onChange={handleInputOnChange}\r\n          required\r\n        />\r\n        <Form.Input\r\n          name=\"cp\"\r\n          icon=\"mobile\"\r\n          iconPosition=\"left\"\r\n          label=\"Contact Number\"\r\n          placeholder=\"Optional\"\r\n          onChange={handleInputOnChange}\r\n        />\r\n        <Form.TextArea onChange={handleInputOnChange} name=\"message\" label=\"Message\" type=\"Message\" required />\r\n\r\n        <Button name={formName} onClick={setSubmitByForm} loading={Submitting && SubmitByForm === formName} content=\"Send\" primary />\r\n      </Form>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default observer(EmailForm);","import React, { useContext } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport {\r\n  Segment,\r\n  Container,\r\n  Grid,\r\n  Divider,\r\n  Header,\r\n  Icon\r\n} from \"semantic-ui-react\";\r\nimport MainStore from \"../../../app/stores/MainStore\";\r\nimport \"./Footer.css\";\r\nimport SocialMedia from \"./socialMedia/SocialMedia\";\r\nimport EmailForm from \"./emailUs/Form\";\r\nimport MediaQuery from \"react-responsive\";\r\n\r\nconst Footer = () => {\r\n  const { HomeInfo } = useContext(MainStore);\r\n\r\n  return (\r\n    <Segment\r\n      className=\"footer\"\r\n      style={{ padding: \"3em 1em\", backgroundColor: \"#000000\" }}\r\n    >\r\n      <Container>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Divider horizontal>\r\n                <img\r\n                  style={{ height: \"100px\", width: \"auto\" }}\r\n                  src={`https://media.graphcms.com/${HomeInfo?.logo.handle}`}\r\n                  alt=\"logo\"\r\n                />\r\n              </Divider>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n\r\n          <Grid.Row>\r\n            <Grid.Column width={16}>\r\n              <Header color=\"yellow\" as=\"h1\" icon textAlign=\"center\">\r\n                <Icon\r\n                  style={{ backgroundColor: \"grey\" }}\r\n                  name=\"call\"\r\n                  circular\r\n                />\r\n                <Header.Content>Contact Us</Header.Content>\r\n              </Header>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Segment placeholder>\r\n                <Grid columns={2} relaxed=\"very\" stackable>\r\n                  <EmailForm />\r\n                  <SocialMedia />\r\n                </Grid>\r\n\r\n                <MediaQuery minDeviceWidth={768}>\r\n                  <Divider vertical>Or</Divider>\r\n                </MediaQuery>\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <div className=\"legal-text\">\r\n                <span>&copy; 2020 All rights reserved</span>\r\n              </div>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(Footer);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport HomeHeader from \"./header/HomeHeader\";\r\nimport MainStore from \"../../app/stores/MainStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Loading } from \"../../app/layout/Loading\";\r\nimport HomeContentBody from \"./content/body\";\r\nimport PopularTours from \"./popularTours/List\";\r\nimport TestimonialSection from \"./testimaonial/section\";\r\nimport AboutTheCompany from './aboutCompany/section';\r\nimport Footer from \"../shared/footer/Footer\";\r\n\r\nconst Home = () => {\r\n\r\n  const { loadData, isLoading } = useContext(MainStore);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [loadData]);\r\n\r\n  return isLoading ? <Loading msg=\"Loading...\" /> : (\r\n    <Segment.Group>\r\n        <HomeHeader />\r\n        <HomeContentBody />\r\n        <PopularTours />\r\n        <TestimonialSection />\r\n        <AboutTheCompany />\r\n        <Footer />\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(Home);","import React, { Fragment } from 'react';\r\nimport './style.css';\r\nimport Home from '../../components/home/Index';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <Route exact path=\"/\" component={Home} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app/layout/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}